Prefix(:=<https://ontologies.vaimee.com/my2sec#>)
Prefix(dct:=<http://purl.org/dc/terms/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(time:=<http://www.w3.org/2006/time#>)
Prefix(my2sec:=<http://vaimee.com/My2Sec#>)


Ontology(<https://ontologies.vaimee.com/my2sec>
<http://vaimee.it/2022/12/my2sec>
Annotation(dct:abstract "The ontology used within My2Sec to represent events, actvities, tasks and projects. It is used to log the time spent by workers on tasks.")
Annotation(dct:description "My2Sec is the innovative online platform that facilitates remote work by keeping track of daily progress in real time. Essential to have an overview updated in real time of the project. 

My2Sec makes it easy and immediate to make decisions promptly and accurately. 
Planning, defining objectives and evaluating results with My2Sec is quick and easy thanks to the fully customizable dashboard.

My2Sec collects in real time a flow of data generated by the worker which, through an Artificial Intelligence algorithm, are automatically linked to specific activities carried out within a project. 

The information, stored in a highly secure decentralized cloud, is easily viewable at any time in customizable dashboards. Thanks to an integrated open source system, My2Sec offers an immediate view of the work progress from any device. 

At the end of the day the user can share the details of the progress of the work done by selecting them from his customizable report in full compliance with the GDPR legislation on sensitive data.")
Annotation(rdfs:comment "This ontology describe the application My2Sec. It works as a solution for smart-workers want to track their activity and manage remote work."@en)
Annotation(rdfs:label "My2Sec"@en)
Annotation(owl:title "My2Sec Ontology")

Declaration(Class(my2sec:AWEvent))
Declaration(Class(my2sec:Activity))
Declaration(Class(my2sec:ActivityType))
Declaration(Class(my2sec:AfkEvent))
Declaration(Class(my2sec:ControlEvent))
Declaration(Class(my2sec:Event))
Declaration(Class(my2sec:LogTime))
Declaration(Class(my2sec:MeetingEvent))
Declaration(Class(my2sec:Member))
Declaration(Class(my2sec:Message))
Declaration(Class(my2sec:NotShutdownEvent))
Declaration(Class(my2sec:Project))
Declaration(Class(my2sec:StartEvent))
Declaration(Class(my2sec:StopEvent))
Declaration(Class(my2sec:SubTask))
Declaration(Class(my2sec:Task))
Declaration(Class(my2sec:TrainingData))
Declaration(Class(my2sec:TrainingEvent))
Declaration(Class(my2sec:UploadEvent))
Declaration(Class(my2sec:WindowsEvent))
Declaration(Class(time:Duration))
Declaration(Class(time:Instant))
Declaration(Class(time:TemporalEntity))
Declaration(Class(:Profession))
Declaration(ObjectProperty(my2sec:attachedTo))
Declaration(ObjectProperty(my2sec:composedBy))
Declaration(ObjectProperty(my2sec:hasActivity))
Declaration(ObjectProperty(my2sec:hasActivityType))
Declaration(ObjectProperty(my2sec:hasEvent))
Declaration(ObjectProperty(my2sec:hasLogTime))
Declaration(ObjectProperty(my2sec:hasMember))
Declaration(ObjectProperty(my2sec:hasTask))
Declaration(ObjectProperty(my2sec:partOf))
Declaration(ObjectProperty(:hasProfession))
Declaration(DataProperty(my2sec:hasAPPTitle))
Declaration(DataProperty(my2sec:hasMeetingName))
Declaration(DataProperty(my2sec:hasTitle))
Declaration(DataProperty(my2sec:hasType))
Declaration(DataProperty(my2sec:hasURL))
Declaration(DataProperty(my2sec:idTask))
Declaration(DataProperty(my2sec:projectName))
Declaration(DataProperty(my2sec:username))
Declaration(DataProperty(time:numericDuration))
Declaration(NamedIndividual(my2sec:Developing))
Declaration(NamedIndividual(my2sec:Email))
Declaration(NamedIndividual(my2sec:Reporting))
Declaration(NamedIndividual(my2sec:Researching))
Declaration(NamedIndividual(my2sec:Testing))
Declaration(NamedIndividual(:A1))
Declaration(NamedIndividual(:Administration))
Declaration(NamedIndividual(:Andrea))
Declaration(NamedIndividual(:BOM))
Declaration(NamedIndividual(:CEO))
Declaration(NamedIndividual(:Call))
Declaration(NamedIndividual(:CustomerSupport))
Declaration(NamedIndividual(:Developer))
Declaration(NamedIndividual(:Fundraising))
Declaration(NamedIndividual(:InternalSupport))
Declaration(NamedIndividual(:Manager))
Declaration(NamedIndividual(:MechanicalDesign))
Declaration(NamedIndividual(:MechanicalDesigner))
Declaration(NamedIndividual(:Meeting))
Declaration(NamedIndividual(:Messaging))
Declaration(NamedIndividual(:Michele))
Declaration(NamedIndividual(:Simone))
Declaration(NamedIndividual(:T1))
Declaration(AnnotationProperty(dct:abstract))
Declaration(AnnotationProperty(dct:description))
Declaration(AnnotationProperty(<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled>))
Declaration(AnnotationProperty(owl:title))
Declaration(AnnotationProperty(<http://www.w3.org/2004/02/skos/core#definition>))
Declaration(AnnotationProperty(<http://www.w3.org/2004/02/skos/core#editorialNote>))
Declaration(Datatype(xsd:duration))

############################
#   Object Properties
############################

# Object Property: my2sec:attachedTo (attachedTo)

AnnotationAssertion(rdfs:comment my2sec:attachedTo "Be attach to something."@en)
AnnotationAssertion(rdfs:label my2sec:attachedTo "attachedTo"@en)
ObjectPropertyDomain(my2sec:attachedTo my2sec:Task)
ObjectPropertyRange(my2sec:attachedTo my2sec:Member)

# Object Property: my2sec:composedBy (composedBy)

AnnotationAssertion(rdfs:comment my2sec:composedBy "Every project is composed by some tasks."@en)
AnnotationAssertion(rdfs:label my2sec:composedBy "composedBy"@en)
ObjectPropertyDomain(my2sec:composedBy my2sec:Project)
ObjectPropertyRange(my2sec:composedBy my2sec:Task)

# Object Property: my2sec:hasActivity (hasActivity)

AnnotationAssertion(rdfs:comment my2sec:hasActivity "Every LogTime refers to an activity."@en)
AnnotationAssertion(rdfs:label my2sec:hasActivity "hasActivity"@en)
InverseObjectProperties(my2sec:hasActivity my2sec:hasLogTime)
ObjectPropertyDomain(my2sec:hasActivity my2sec:LogTime)
ObjectPropertyRange(my2sec:hasActivity my2sec:Activity)

# Object Property: my2sec:hasActivityType (hasActivityType)

AnnotationAssertion(Annotation(rdfs:comment "This property link also the subtask with his own activity type define by Project Manager."@en) Annotation(rdfs:comment "This property match also the training event with the right activitytype."@en) rdfs:comment my2sec:hasActivityType "Every actvity is associated with an activitytype."@en)
AnnotationAssertion(rdfs:label my2sec:hasActivityType "hasActivityType"@en)
ObjectPropertyDomain(my2sec:hasActivityType my2sec:Activity)
ObjectPropertyDomain(my2sec:hasActivityType my2sec:SubTask)
ObjectPropertyDomain(my2sec:hasActivityType my2sec:Task)
ObjectPropertyDomain(my2sec:hasActivityType my2sec:TrainingEvent)
ObjectPropertyDomain(my2sec:hasActivityType :Profession)
ObjectPropertyRange(my2sec:hasActivityType my2sec:ActivityType)

# Object Property: my2sec:hasEvent (hasEvent)

AnnotationAssertion(rdfs:comment my2sec:hasEvent "Every TrainingEvent refers to a specific event"@en)
AnnotationAssertion(rdfs:label my2sec:hasEvent "hasEvent"@en)
ObjectPropertyDomain(my2sec:hasEvent my2sec:TrainingEvent)
ObjectPropertyRange(my2sec:hasEvent my2sec:Event)

# Object Property: my2sec:hasLogTime (hasLogTime)

AnnotationAssertion(rdfs:comment my2sec:hasLogTime "Every activity has his own logtime."@en)
AnnotationAssertion(rdfs:label my2sec:hasLogTime "hasLogTime"@en)
ObjectPropertyDomain(my2sec:hasLogTime my2sec:Activity)
ObjectPropertyRange(my2sec:hasLogTime my2sec:LogTime)

# Object Property: my2sec:hasMember (hasURI)

AnnotationAssertion(rdfs:comment my2sec:hasMember "Every Event has an URI reference to the member who raised it."@en)
AnnotationAssertion(rdfs:label my2sec:hasMember "hasURI"@en)
ObjectPropertyDomain(my2sec:hasMember my2sec:Activity)
ObjectPropertyDomain(my2sec:hasMember my2sec:Event)
ObjectPropertyDomain(my2sec:hasMember my2sec:Message)
ObjectPropertyRange(my2sec:hasMember my2sec:Member)

# Object Property: my2sec:hasTask (hasTask)

AnnotationAssertion(rdfs:comment my2sec:hasTask "Has a task. This property make possible the association between task and activity."@en)
AnnotationAssertion(rdfs:label my2sec:hasTask "hasTask"@en)
ObjectPropertyDomain(my2sec:hasTask my2sec:Activity)
ObjectPropertyRange(my2sec:hasTask my2sec:Task)

# Object Property: my2sec:partOf (partOf)

AnnotationAssertion(rdfs:comment my2sec:partOf "Every subtask is part of Task."@en)
AnnotationAssertion(rdfs:label my2sec:partOf "partOf"@en)
ObjectPropertyDomain(my2sec:partOf my2sec:SubTask)
ObjectPropertyRange(my2sec:partOf my2sec:Task)

# Object Property: :hasProfession (hasProfession)

AnnotationAssertion(rdfs:comment :hasProfession "Every Member has a Profession."@en)
AnnotationAssertion(rdfs:label :hasProfession "hasProfession"@en)
ObjectPropertyDomain(:hasProfession my2sec:Member)
ObjectPropertyRange(:hasProfession :Profession)


############################
#   Data Properties
############################

# Data Property: my2sec:hasAPPTitle (hasAPPTitle)

AnnotationAssertion(rdfs:comment my2sec:hasAPPTitle "Every event has APP title."@en)
AnnotationAssertion(rdfs:label my2sec:hasAPPTitle "hasAPPTitle"@en)
DataPropertyDomain(my2sec:hasAPPTitle my2sec:Event)
DataPropertyRange(my2sec:hasAPPTitle rdfs:Literal)

# Data Property: my2sec:hasMeetingName (hasMeetingName)

AnnotationAssertion(rdfs:comment my2sec:hasMeetingName "Every Meeting has a name."@en)
AnnotationAssertion(rdfs:label my2sec:hasMeetingName "hasMeetingName"@en)
DataPropertyDomain(my2sec:hasMeetingName my2sec:MeetingEvent)
DataPropertyRange(my2sec:hasMeetingName rdfs:Literal)

# Data Property: my2sec:hasTitle (hasTitle)

AnnotationAssertion(rdfs:comment my2sec:hasTitle "Every event has a Title."@en)
AnnotationAssertion(rdfs:label my2sec:hasTitle "hasTitle"@en)
DataPropertyDomain(my2sec:hasTitle my2sec:Event)
DataPropertyRange(my2sec:hasTitle rdfs:Literal)

# Data Property: my2sec:hasType (hasType)

AnnotationAssertion(Annotation(rdfs:comment "1 = start
0 = stop"@en) rdfs:comment my2sec:hasType "Every meeting event haas a type (start/stop)"@en)
AnnotationAssertion(rdfs:label my2sec:hasType "hasType"@en)
DataPropertyDomain(my2sec:hasType my2sec:MeetingEvent)
DataPropertyRange(my2sec:hasType xsd:boolean)

# Data Property: my2sec:hasURL (hasURL)

AnnotationAssertion(rdfs:comment my2sec:hasURL "Every event has URL."@en)
AnnotationAssertion(rdfs:label my2sec:hasURL "hasURL"@en)
DataPropertyDomain(my2sec:hasURL my2sec:Event)
DataPropertyRange(my2sec:hasURL xsd:anyURI)

# Data Property: my2sec:idTask (idTask)

AnnotationAssertion(rdfs:comment my2sec:idTask "Every task has an ID."@en)
AnnotationAssertion(rdfs:label my2sec:idTask "idTask"@en)
DataPropertyDomain(my2sec:idTask my2sec:Task)
DataPropertyRange(my2sec:idTask xsd:anyURI)

# Data Property: my2sec:projectName (projectName)

AnnotationAssertion(rdfs:comment my2sec:projectName "Every project has a name."@en)
AnnotationAssertion(rdfs:label my2sec:projectName "projectName"@en)
DataPropertyDomain(my2sec:projectName my2sec:Project)
DataPropertyRange(my2sec:projectName rdfs:Literal)

# Data Property: my2sec:username (username)

AnnotationAssertion(rdfs:comment my2sec:username "The username used to identify the user within the system")
AnnotationAssertion(rdfs:label my2sec:username "username")
DataPropertyDomain(my2sec:username my2sec:Member)
DataPropertyRange(my2sec:username xsd:string)

# Data Property: time:numericDuration (Numeric value of temporal duration)

AnnotationAssertion(rdfs:comment time:numericDuration "Valor de una extensión temporal expresada como un número decimal escalado por una unidad de tiempo."@es)
AnnotationAssertion(rdfs:comment time:numericDuration "Value of a temporal extent expressed as a decimal number scaled by a temporal unit"@en)
AnnotationAssertion(rdfs:label time:numericDuration "Numeric value of temporal duration"@en)
AnnotationAssertion(rdfs:label time:numericDuration "valor numérico de duración temporal"@es)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> time:numericDuration "Valor de una extensión temporal expresada como un número decimal escalado por una unidad de tiempo."@es)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> time:numericDuration "Value of a temporal extent expressed as a decimal number scaled by a temporal unit"@en)
DataPropertyDomain(time:numericDuration my2sec:Activity)
DataPropertyDomain(time:numericDuration time:Duration)
DataPropertyRange(time:numericDuration xsd:decimal)



############################
#   Classes
############################

# Class: my2sec:AWEvent (AWEvent)

AnnotationAssertion(rdfs:comment my2sec:AWEvent "This class contain Event generated by Activity Watch."@en)
AnnotationAssertion(rdfs:label my2sec:AWEvent "AWEvent"@en)
SubClassOf(my2sec:AWEvent my2sec:Event)

# Class: my2sec:Activity (Activity)

AnnotationAssertion(rdfs:comment my2sec:Activity "Duration of time meanwile members doing one specific activity."@en)
AnnotationAssertion(rdfs:label my2sec:Activity "Activity"@en)
SubClassOf(my2sec:Activity time:TemporalEntity)

# Class: my2sec:ActivityType (ActivityType)

AnnotationAssertion(rdfs:comment my2sec:ActivityType "The type of working activity."@en)
AnnotationAssertion(rdfs:label my2sec:ActivityType "ActivityType"@en)

# Class: my2sec:AfkEvent (AfkEvent)

AnnotationAssertion(rdfs:comment my2sec:AfkEvent "An Afk event."@en)
AnnotationAssertion(rdfs:label my2sec:AfkEvent "AfkEvent"@en)
SubClassOf(my2sec:AfkEvent my2sec:AWEvent)

# Class: my2sec:ControlEvent (ControlEvent)

AnnotationAssertion(rdfs:comment my2sec:ControlEvent "This class contain Event generated by sistem control."@en)
AnnotationAssertion(rdfs:label my2sec:ControlEvent "ControlEvent"@en)
SubClassOf(my2sec:ControlEvent my2sec:Event)

# Class: my2sec:Event (Event)

AnnotationAssertion(Annotation(rdfs:comment "Specifically it should be characterized by an eventtype (which must coincide with the activitytype)"@en) rdfs:comment my2sec:Event "An event is something that happen in one moment and has no temporal duration.
It is characterized by timestamp, apptitle and activitytype."@en)
AnnotationAssertion(rdfs:label my2sec:Event "Event"@en)
EquivalentClasses(my2sec:Event time:Instant)
SubClassOf(my2sec:Event time:TemporalEntity)

# Class: my2sec:LogTime (LogTime)

AnnotationAssertion(rdfs:comment my2sec:LogTime "Duration of time spent on a specific task by one member. It is characterized by date, hours ad an activity."@en)
AnnotationAssertion(rdfs:label my2sec:LogTime "LogTime"@en)
SubClassOf(my2sec:LogTime time:TemporalEntity)

# Class: my2sec:MeetingEvent (MeetingEvent)

AnnotationAssertion(rdfs:comment my2sec:MeetingEvent "A meeting Event"@en)
AnnotationAssertion(rdfs:label my2sec:MeetingEvent "MeetingEvent"@en)
SubClassOf(my2sec:MeetingEvent my2sec:AWEvent)

# Class: my2sec:Member (Member)

AnnotationAssertion(rdfs:comment my2sec:Member "A member is a generic Worker."@en)
AnnotationAssertion(rdfs:isDefinedBy my2sec:Member "http://xmlns.com/foaf/0.1/"@en)
AnnotationAssertion(rdfs:label my2sec:Member "Member"@en)

# Class: my2sec:Message (Message)

AnnotationAssertion(rdfs:comment my2sec:Message "Raw message sent by Activity Watch")
AnnotationAssertion(rdfs:label my2sec:Message "Message")
SubClassOf(my2sec:Message time:TemporalEntity)

# Class: my2sec:NotShutdownEvent (NotShutdownEvent)

AnnotationAssertion(rdfs:comment my2sec:NotShutdownEvent "A Not Shutdown Event."@en)
AnnotationAssertion(rdfs:label my2sec:NotShutdownEvent "NotShutdownEvent"@en)
SubClassOf(my2sec:NotShutdownEvent my2sec:ControlEvent)

# Class: my2sec:Project (Project)

AnnotationAssertion(rdfs:comment my2sec:Project "A project (a collective endeavour of some kind)."@en)
AnnotationAssertion(rdfs:label my2sec:Project "Project"@en)

# Class: my2sec:StartEvent (StartEvent)

AnnotationAssertion(rdfs:comment my2sec:StartEvent "An event that marks the beginning of a working day."@en)
AnnotationAssertion(rdfs:label my2sec:StartEvent "StartEvent"@en)
SubClassOf(my2sec:StartEvent my2sec:ControlEvent)

# Class: my2sec:StopEvent (StopEvent)

AnnotationAssertion(rdfs:comment my2sec:StopEvent "an event that marks the end of a working day"@en)
AnnotationAssertion(rdfs:label my2sec:StopEvent "StopEvent"@en)
SubClassOf(my2sec:StopEvent my2sec:ControlEvent)

# Class: my2sec:SubTask (SubTask)

AnnotationAssertion(rdfs:comment my2sec:SubTask "Every Task is composed by different subtasks. They have a specific type."@en)
AnnotationAssertion(rdfs:label my2sec:SubTask "SubTask"@en)

# Class: my2sec:Task (Task)

AnnotationAssertion(rdfs:comment my2sec:Task "A task is an assignment given to members."@en)
AnnotationAssertion(rdfs:label my2sec:Task "Task"@en)

# Class: my2sec:TrainingData (TrainingData)

AnnotationAssertion(rdfs:comment my2sec:TrainingData "This class contain dataset used for train AI or something like that."@en)
AnnotationAssertion(rdfs:label my2sec:TrainingData "TrainingData"@en)

# Class: my2sec:TrainingEvent (TrainingEvent)

AnnotationAssertion(rdfs:comment my2sec:TrainingEvent "This class contains Events linked to a specific task."@en)
AnnotationAssertion(rdfs:label my2sec:TrainingEvent "TrainingEvent"@en)
SubClassOf(my2sec:TrainingEvent my2sec:Event)
SubClassOf(my2sec:TrainingEvent my2sec:TrainingData)
SubClassOf(my2sec:TrainingEvent time:TemporalEntity)

# Class: my2sec:UploadEvent (UploadEvent)

AnnotationAssertion(rdfs:comment my2sec:UploadEvent "An event signals the dispatch of events to the aggregator."@en)
AnnotationAssertion(rdfs:label my2sec:UploadEvent "UploadEvent"@en)
SubClassOf(my2sec:UploadEvent my2sec:ControlEvent)

# Class: my2sec:WindowsEvent (WindowsEvent)

AnnotationAssertion(rdfs:comment my2sec:WindowsEvent "A window event is a particular event visualized as a window."@en)
AnnotationAssertion(rdfs:label my2sec:WindowsEvent "WindowsEvent"@en)
SubClassOf(my2sec:WindowsEvent my2sec:AWEvent)

# Class: time:Instant (instante de tiempo.)

AnnotationAssertion(rdfs:comment time:Instant "Temporal Instant"@en)
AnnotationAssertion(rdfs:label time:Instant "Time Instant"@en)
SubClassOf(time:Instant time:TemporalEntity)

# Class: time:TemporalEntity (Temporal entity)

AnnotationAssertion(rdfs:comment time:TemporalEntity "A temporal Instant or Interval"@en)
AnnotationAssertion(rdfs:label time:TemporalEntity "TemporalEntity"@en)

# Class: :Profession (Profession)

AnnotationAssertion(rdfs:comment :Profession "This class contain all professions described in the ontology."@en)
AnnotationAssertion(rdfs:label :Profession "Profession"@en)


############################
#   Named Individuals
############################

# Individual: my2sec:Developing (Developing)

AnnotationAssertion(rdfs:comment my2sec:Developing "Represent all activities aimed to produce code. Code maintenance and updating are included."@en)
AnnotationAssertion(rdfs:label my2sec:Developing "Developing"@en)
ClassAssertion(my2sec:ActivityType my2sec:Developing)

# Individual: my2sec:Email (Email)

AnnotationAssertion(rdfs:comment my2sec:Email "Represent all activities aimed to comunicates with internal staff."@en)
AnnotationAssertion(rdfs:label my2sec:Email "Email"@en)
ClassAssertion(my2sec:ActivityType my2sec:Email)

# Individual: my2sec:Reporting (Reporting)

AnnotationAssertion(rdfs:comment my2sec:Reporting "Represent all activities aimed to produce some Business Reports for internal or external use."@en)
AnnotationAssertion(rdfs:label my2sec:Reporting "Reporting"@en)
ClassAssertion(my2sec:ActivityType my2sec:Reporting)

# Individual: my2sec:Researching (Researching)

AnnotationAssertion(rdfs:comment my2sec:Researching "Represent all activities aimed at finding information of various kinds, for example the best components for the realization of products."@en)
AnnotationAssertion(rdfs:label my2sec:Researching "Researching"@en)
ClassAssertion(my2sec:ActivityType my2sec:Researching)

# Individual: my2sec:Testing (Testing)

AnnotationAssertion(rdfs:comment my2sec:Testing "Represent all activities aimed to test and debug the code produced."@en)
AnnotationAssertion(rdfs:label my2sec:Testing "Testing"@en)
ClassAssertion(my2sec:ActivityType my2sec:Testing)

# Individual: :A1 (:A1)

ClassAssertion(my2sec:Activity :A1)
ObjectPropertyAssertion(my2sec:hasActivityType :A1 my2sec:Developing)
ObjectPropertyAssertion(my2sec:hasMember :A1 :Simone)
DataPropertyAssertion(time:numericDuration :A1 "1.3"^^xsd:decimal)

# Individual: :Administration (Administration)

AnnotationAssertion(rdfs:comment :Administration "It represents the administrative/financial management activities of an economic and commercial nature."@en)
AnnotationAssertion(rdfs:label :Administration "Administration"@en)
ClassAssertion(my2sec:ActivityType :Administration)

# Individual: :Andrea (:Andrea)

ClassAssertion(my2sec:Member :Andrea)
ObjectPropertyAssertion(:hasProfession :Andrea :MechanicalDesigner)

# Individual: :BOM (BOM)

AnnotationAssertion(rdfs:comment :BOM "Represents the bill of materials drafting activity."@en)
AnnotationAssertion(Annotation(rdfs:comment "Bill of Material"@en) rdfs:label :BOM "BOM"@en)
ClassAssertion(my2sec:ActivityType :BOM)
ObjectPropertyAssertion(my2sec:hasActivityType :BOM my2sec:Email)
ObjectPropertyAssertion(my2sec:hasActivityType :BOM my2sec:Researching)
ObjectPropertyAssertion(my2sec:hasActivityType :BOM :BOM)
ObjectPropertyAssertion(my2sec:hasActivityType :BOM :MechanicalDesign)

# Individual: :CEO (:CEO)

AnnotationAssertion(rdfs:isDefinedBy :CEO "http://data.europa.eu/esco/occupation/6c3fd65e-2d24-47d8-bc22-9e93512bdcc2"@en)
ClassAssertion(:Profession :CEO)
ObjectPropertyAssertion(my2sec:hasActivityType :CEO my2sec:Developing)
ObjectPropertyAssertion(my2sec:hasActivityType :CEO my2sec:Email)
ObjectPropertyAssertion(my2sec:hasActivityType :CEO my2sec:Reporting)
ObjectPropertyAssertion(my2sec:hasActivityType :CEO :Administration)
ObjectPropertyAssertion(my2sec:hasActivityType :CEO :Fundraising)
ObjectPropertyAssertion(my2sec:hasActivityType :CEO :Meeting)
ObjectPropertyAssertion(my2sec:hasActivityType :CEO :Messaging)

# Individual: :Call (Call)

AnnotationAssertion(rdfs:comment :Call "It represents the relationships between customers, suppliers, or others that occurred through telephone calls."@en)
AnnotationAssertion(rdfs:label :Call "Call"@en)
ClassAssertion(my2sec:ActivityType :Call)

# Individual: :CustomerSupport (CustomerSupport)

AnnotationAssertion(rdfs:comment :CustomerSupport "Represent all activities aimed at helping the consumer for: primary installation, control and customization. Customer assistance also includes activities such as: operational support, specific information assistance, analysis of customer's needs."@en)
AnnotationAssertion(rdfs:label :CustomerSupport "CustomerSupport"@en)
ClassAssertion(my2sec:ActivityType :CustomerSupport)

# Individual: :Developer (:Developer)

AnnotationAssertion(Annotation(rdfs:comment "There are also other types of developers in the ESCO ontology, the most inclusive has been chosen.") rdfs:isDefinedBy :Developer "http://data.europa.eu/esco/occupation/a7c1d23d-aeca-4bee-9a08-5993ed98b135"@en)
ClassAssertion(:Profession :Developer)
ObjectPropertyAssertion(my2sec:hasActivityType :Developer my2sec:Developing)
ObjectPropertyAssertion(my2sec:hasActivityType :Developer my2sec:Email)
ObjectPropertyAssertion(my2sec:hasActivityType :Developer my2sec:Reporting)
ObjectPropertyAssertion(my2sec:hasActivityType :Developer my2sec:Researching)
ObjectPropertyAssertion(my2sec:hasActivityType :Developer my2sec:Testing)
ObjectPropertyAssertion(my2sec:hasActivityType :Developer :CustomerSupport)
ObjectPropertyAssertion(my2sec:hasActivityType :Developer :InternalSupport)
ObjectPropertyAssertion(my2sec:hasActivityType :Developer :Messaging)

# Individual: :Fundraising (Fundraising)

AnnotationAssertion(rdfs:comment :Fundraising "Represents the fundraising activity through the writing of announcements, discussions with investors, etc."@en)
AnnotationAssertion(rdfs:label :Fundraising "Fundraising"@en)
ClassAssertion(my2sec:ActivityType :Fundraising)

# Individual: :InternalSupport (InternalSupport)

AnnotationAssertion(rdfs:comment :InternalSupport "Represent all activities aimed at helping the staff during their work."@en)
AnnotationAssertion(rdfs:label :InternalSupport "InternalSupport"@en)
ClassAssertion(my2sec:ActivityType :InternalSupport)

# Individual: :Manager (:Manager)

AnnotationAssertion(rdfs:isDefinedBy :Manager "https://www.ilo.org/public/english/bureau/stat/isco/isco08/"@en)
ClassAssertion(:Profession :Manager)
ObjectPropertyAssertion(my2sec:hasActivityType :Manager my2sec:Email)
ObjectPropertyAssertion(my2sec:hasActivityType :Manager my2sec:Reporting)
ObjectPropertyAssertion(my2sec:hasActivityType :Manager my2sec:Researching)
ObjectPropertyAssertion(my2sec:hasActivityType :Manager my2sec:Testing)
ObjectPropertyAssertion(my2sec:hasActivityType :Manager :Administration)
ObjectPropertyAssertion(my2sec:hasActivityType :Manager :Call)
ObjectPropertyAssertion(my2sec:hasActivityType :Manager :CustomerSupport)
ObjectPropertyAssertion(my2sec:hasActivityType :Manager :InternalSupport)
ObjectPropertyAssertion(my2sec:hasActivityType :Manager :Messaging)

# Individual: :MechanicalDesign (MechanicalDesign)

AnnotationAssertion(rdfs:comment :MechanicalDesign "Represents the mechanical design activity of a component or a device."@en)
AnnotationAssertion(rdfs:label :MechanicalDesign "MechanicalDesign"@en)
ClassAssertion(my2sec:ActivityType :MechanicalDesign)

# Individual: :MechanicalDesigner (:MechanicalDesigner)

AnnotationAssertion(rdfs:isDefinedBy :MechanicalDesigner "http://data.europa.eu/esco/occupation/38240cc5-d1d9-4de9-9480-29c51da291eb"@en)
ClassAssertion(:Profession :MechanicalDesigner)
ObjectPropertyAssertion(my2sec:hasActivityType :MechanicalDesigner my2sec:Email)
ObjectPropertyAssertion(my2sec:hasActivityType :MechanicalDesigner my2sec:Researching)
ObjectPropertyAssertion(my2sec:hasActivityType :MechanicalDesigner :BOM)
ObjectPropertyAssertion(my2sec:hasActivityType :MechanicalDesigner :MechanicalDesign)
ObjectPropertyAssertion(my2sec:hasActivityType :MechanicalDesigner :Messaging)

# Individual: :Meeting (Meeting)

AnnotationAssertion(rdfs:comment :Meeting "Represents the activity of making meetings."@en)
AnnotationAssertion(rdfs:label :Meeting "Meeting"@en)
ClassAssertion(my2sec:ActivityType :Meeting)

# Individual: :Messaging (Messaging)

AnnotationAssertion(rdfs:comment :Messaging "Represents the activity of exchanging messages on instant messaging platforms with collaborators and internal staff."@en)
AnnotationAssertion(rdfs:label :Messaging "Messaging"@en)
ClassAssertion(my2sec:ActivityType :Messaging)

# Individual: :Michele (:Michele)

ClassAssertion(my2sec:Member :Michele)
ObjectPropertyAssertion(:hasProfession :Michele :Developer)

# Individual: :Simone (:Simone)

ClassAssertion(my2sec:Member :Simone)
ObjectPropertyAssertion(:hasProfession :Simone :Developer)

# Individual: :T1 (:T1)

ClassAssertion(my2sec:Task :T1)
ObjectPropertyAssertion(my2sec:attachedTo :T1 :Simone)
ObjectPropertyAssertion(my2sec:hasActivityType :T1 my2sec:Developing)
DataPropertyAssertion(time:numericDuration :T1 "1.3"^^xsd:decimal)


DifferentIndividuals(my2sec:Developing my2sec:Email my2sec:Reporting my2sec:Researching my2sec:Testing :Administration :Andrea :BOM :CEO :Call :CustomerSupport :Developer :Fundraising :InternalSupport :Manager :MechanicalDesign :MechanicalDesigner :Meeting :Messaging :Michele :Simone)
DLSafeRule(Annotation(<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled> "true"^^xsd:boolean) Annotation(rdfs:comment "This rule associates each activity with its task.") Annotation(rdfs:label "Activity to Task") Body(ObjectPropertyAtom(my2sec:attachedTo Variable(<http://www.semanticweb.org/chiar/ontologies/2022/10/My2Sec#T>) Variable(<http://www.semanticweb.org/chiar/ontologies/2022/10/My2Sec#M>)) ClassAtom(my2sec:Member Variable(<http://www.semanticweb.org/chiar/ontologies/2022/10/My2Sec#M>)) ObjectPropertyAtom(my2sec:partOf Variable(<http://www.semanticweb.org/chiar/ontologies/2022/10/My2Sec#S>) Variable(<http://www.semanticweb.org/chiar/ontologies/2022/10/My2Sec#T>)) ObjectPropertyAtom(my2sec:hasActivityType Variable(<http://www.semanticweb.org/chiar/ontologies/2022/10/My2Sec#AV>) Variable(<http://www.semanticweb.org/chiar/ontologies/2022/10/My2Sec#AT>)) ObjectPropertyAtom(my2sec:hasActivityType Variable(<http://www.semanticweb.org/chiar/ontologies/2022/10/My2Sec#S>) Variable(<http://www.semanticweb.org/chiar/ontologies/2022/10/My2Sec#AT>)) ObjectPropertyAtom(my2sec:hasMember Variable(<http://www.semanticweb.org/chiar/ontologies/2022/10/My2Sec#AV>) Variable(<http://www.semanticweb.org/chiar/ontologies/2022/10/My2Sec#M>)))Head(BuiltInAtom(<http://sqwrl.stanford.edu/ontologies/built-ins/3.4/sqwrl.owl#select> Variable(<http://www.semanticweb.org/chiar/ontologies/2022/10/My2Sec#M>) Variable(<http://www.semanticweb.org/chiar/ontologies/2022/10/My2Sec#AV>) Variable(<http://www.semanticweb.org/chiar/ontologies/2022/10/My2Sec#T>)) ObjectPropertyAtom(my2sec:hasTask Variable(<http://www.semanticweb.org/chiar/ontologies/2022/10/My2Sec#AV>) Variable(<http://www.semanticweb.org/chiar/ontologies/2022/10/My2Sec#T>)) BuiltInAtom(<http://sqwrl.stanford.edu/ontologies/built-ins/3.4/sqwrl.owl#columnNames> "Member"^^xsd:string "Activity"^^xsd:string "Task"^^xsd:string)))
DLSafeRule(Annotation(<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled> "true"^^xsd:boolean) Annotation(rdfs:comment "This rule associates each activity with its task if there aren't subtask associated with task. In this case every task has only one activity type."^^xsd:string) Annotation(rdfs:label "Activity to Task w/ subtask"^^xsd:string) Body(ObjectPropertyAtom(my2sec:attachedTo Variable(:T) Variable(:M)) ClassAtom(my2sec:Member Variable(:M)) ObjectPropertyAtom(my2sec:hasActivityType Variable(:AV) Variable(:AT)) ObjectPropertyAtom(my2sec:hasActivityType Variable(:T) Variable(:AT)) ObjectPropertyAtom(my2sec:hasMember Variable(:AV) Variable(:M)))Head(BuiltInAtom(<http://sqwrl.stanford.edu/ontologies/built-ins/3.4/sqwrl.owl#select> Variable(:M) Variable(:AV) Variable(:T)) ObjectPropertyAtom(my2sec:hasTask Variable(:AV) Variable(:T)) BuiltInAtom(<http://sqwrl.stanford.edu/ontologies/built-ins/3.4/sqwrl.owl#columnNames> "Member"^^xsd:string "Activity"^^xsd:string "Task"^^xsd:string)))
DLSafeRule(Annotation(<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled> "true"^^xsd:boolean) Annotation(rdfs:comment "This rule associates each activity with its task if there aren't subtask associated with task. In this case every task has only one activity type.This rule also give us the time spent by the activity on that task"^^xsd:string) Annotation(rdfs:label "Activity to Task w/ Subtask with Duration"^^xsd:string) Body(ObjectPropertyAtom(my2sec:attachedTo Variable(:T) Variable(:M)) ClassAtom(my2sec:Member Variable(:M)) ObjectPropertyAtom(my2sec:hasActivityType Variable(:AV) Variable(:AT)) ObjectPropertyAtom(my2sec:hasActivityType Variable(:T) Variable(:AT)) ObjectPropertyAtom(my2sec:hasMember Variable(:AV) Variable(:M)) DataPropertyAtom(time:numericDuration Variable(:AV) Variable(:time)))Head(BuiltInAtom(<http://sqwrl.stanford.edu/ontologies/built-ins/3.4/sqwrl.owl#select> Variable(:M) Variable(:T) Variable(:time)) ObjectPropertyAtom(my2sec:hasTask Variable(:AV) Variable(:T)) BuiltInAtom(<http://sqwrl.stanford.edu/ontologies/built-ins/3.4/sqwrl.owl#columnNames> "Member"^^xsd:string "Task"^^xsd:string "Duration"^^xsd:string)))
)